[tool.poetry]
name = "pi1-web-server"
version = "0.1.0"
description = "Repositório contendo o código do servidor web do Projeto Integrador de Engenharia 1."
license = "MIT"
authors = ["kyomi <me@kyomi.dev>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.0.6"
django-environ = "^0.11.2"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.1"
commitizen = "^3.27.0"
django-stubs = {extras = ["compatible-mypy"], version = "^5.0.2"}
pytest = "^8.2.2"
pytest-sugar = "^1.0.0"
pytest-django = "^4.8.0"

[tool.ruff]
# Ruff configuration:
# https://docs.astral.sh/ruff
required-version = "0.4.8"
target-version = "py312"

show-fixes = true
preview =  true
output-format = "full"
# extend-exclude = ["apps/*/migrations/*"]

fix = true
line-length = 79

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "C90",
    "I",
    "N",
    "UP",
    "S",
    "B",
    "C4",
    "DTZ",
    "DJ",
    "INP",
    "SIM",
    "PTH",
    "PERF",
]

[tool.ruff.lint.per-file-ignores]
# Ignore errors in specific files.
# https://docs.astral.sh/ruff/settings/#extend-per-file-ignores
"server/settings/development.py" = ["F403"]
"*/tests/*.py" = ["S101", "S105"]

[tool.ruff.lint.pycodestyle]
# pycodestyle configuration:
# https://docs.astral.sh/ruff/settings/#pycodestyle
max-doc-length = 72
max-line-length = 79

[tool.ruff.lint.mccabe]
# mccabe configuration:
# https://docs.astral.sh/ruff/settings/#mccabe
max-complexity = 5

[tool.ruff.lint.pydocstyle]
# pydocstyle configuration:
# https://docs.astral.sh/ruff/settings/#pydocstyle
convention = "numpy"

[tool.bandit]
# Bandit configuration:
# https://bandit.readthedocs.io/en/latest/config.html
# exclude_dirs = ["*/tests/*"]

[tool.mypy]
# Mypy configuration:
# https://mypy.readthedocs.io/en/stable/config_file.html
strict = true
pretty = true

disallow_any_unimported = true
disallow_any_decorated = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
show_error_context = true
show_column_numbers = true
show_error_codes = true

plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
# django-stubs configuration:
# https://github.com/typeddjango/django-stubs
# django_settings_module = "server.settings"
django_settings_module = "pi.settings"

[tool.pytest.ini_options]
# DJANGO_SETTINGS_MODULE = "server.settings.development"
DJANGO_SETTINGS_MODULE = "pi.settings"
# python_files = ["*/tests/test_*.py"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "semver2"
version_provider = "poetry"
gpg_sign = true
bump_message = "bump: bump version to $new_version"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
